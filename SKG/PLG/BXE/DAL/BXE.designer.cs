#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BXE.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BXE")]
	public partial class BXEDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertVehicle(Vehicle instance);
    partial void UpdateVehicle(Vehicle instance);
    partial void DeleteVehicle(Vehicle instance);
    partial void InsertDetail(Detail instance);
    partial void UpdateDetail(Detail instance);
    partial void DeleteDetail(Detail instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertKind(Kind instance);
    partial void UpdateKind(Kind instance);
    partial void DeleteKind(Kind instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public BXEDataContext() : 
				base(global::BXE.Properties.Settings.Default.BXEConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BXEDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BXEDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BXEDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BXEDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Vehicle> Vehicles
		{
			get
			{
				return this.GetTable<Vehicle>();
			}
		}
		
		public System.Data.Linq.Table<Detail> Details
		{
			get
			{
				return this.GetTable<Detail>();
			}
		}
		
		public System.Data.Linq.Table<Group> Groups
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<Kind> Kinds
		{
			get
			{
				return this.GetTable<Kind>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Details_In")]
		public ISingleResult<Detail> Details_In()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Detail>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Details_Out")]
		public ISingleResult<Detail> Details_Out()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Detail>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Vehicles_In")]
		public ISingleResult<Vehicle> Vehicles_In()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Vehicle>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Vehicles_Out")]
		public ISingleResult<Vehicle> Vehicles_Out()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Vehicle>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CurrentTime", IsComposable=true)]
		public System.Nullable<System.DateTime> CurrentTime()
		{
			return ((System.Nullable<System.DateTime>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehicles")]
	public partial class Vehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _KindId;
		
		private string _Number;
		
		private string _Descript;
		
		private System.Nullable<decimal> _Length;
		
		private System.Nullable<int> _Chair;
		
		private System.Nullable<decimal> _Weight;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _Birth;
		
		private string _Address;
		
		private string _Phone;
		
		private EntityRef<Kind> _Kind;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnKindIdChanging(long value);
    partial void OnKindIdChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnDescriptChanging(string value);
    partial void OnDescriptChanged();
    partial void OnLengthChanging(System.Nullable<decimal> value);
    partial void OnLengthChanged();
    partial void OnChairChanging(System.Nullable<int> value);
    partial void OnChairChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public Vehicle()
		{
			this._Kind = default(EntityRef<Kind>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KindId", DbType="BigInt NOT NULL")]
		public long KindId
		{
			get
			{
				return this._KindId;
			}
			set
			{
				if ((this._KindId != value))
				{
					if (this._Kind.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKindIdChanging(value);
					this.SendPropertyChanging();
					this._KindId = value;
					this.SendPropertyChanged("KindId");
					this.OnKindIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descript", DbType="NVarChar(200)")]
		public string Descript
		{
			get
			{
				return this._Descript;
			}
			set
			{
				if ((this._Descript != value))
				{
					this.OnDescriptChanging(value);
					this.SendPropertyChanging();
					this._Descript = value;
					this.SendPropertyChanged("Descript");
					this.OnDescriptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chair", DbType="Int")]
		public System.Nullable<int> Chair
		{
			get
			{
				return this._Chair;
			}
			set
			{
				if ((this._Chair != value))
				{
					this.OnChairChanging(value);
					this.SendPropertyChanging();
					this._Chair = value;
					this.SendPropertyChanged("Chair");
					this.OnChairChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birth
		{
			get
			{
				return this._Birth;
			}
			set
			{
				if ((this._Birth != value))
				{
					this.OnBirthChanging(value);
					this.SendPropertyChanging();
					this._Birth = value;
					this.SendPropertyChanged("Birth");
					this.OnBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(200)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kind_Vehicle", Storage="_Kind", ThisKey="KindId", OtherKey="Id", IsForeignKey=true)]
		public Kind Kind
		{
			get
			{
				return this._Kind.Entity;
			}
			set
			{
				Kind previousValue = this._Kind.Entity;
				if (((previousValue != value) 
							|| (this._Kind.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kind.Entity = null;
						previousValue.Vehicles.Remove(this);
					}
					this._Kind.Entity = value;
					if ((value != null))
					{
						value.Vehicles.Add(this);
						this._KindId = value.Id;
					}
					else
					{
						this._KindId = default(long);
					}
					this.SendPropertyChanged("Kind");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Details")]
	public partial class Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _AccIn;
		
		private System.Nullable<long> _AccOut;
		
		private string _Number;
		
		private System.Nullable<System.DateTime> _DateIn;
		
		private System.Nullable<System.DateTime> _DateOut;
		
		private System.Nullable<int> _Day;
		
		private System.Nullable<int> _Hour;
		
		private System.Nullable<decimal> _Price1;
		
		private System.Nullable<decimal> _Price2;
		
		private System.Nullable<decimal> _Money;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAccInChanging(System.Nullable<long> value);
    partial void OnAccInChanged();
    partial void OnAccOutChanging(System.Nullable<long> value);
    partial void OnAccOutChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnDateInChanged();
    partial void OnDateOutChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOutChanged();
    partial void OnDayChanging(System.Nullable<int> value);
    partial void OnDayChanged();
    partial void OnHourChanging(System.Nullable<int> value);
    partial void OnHourChanged();
    partial void OnPrice1Changing(System.Nullable<decimal> value);
    partial void OnPrice1Changed();
    partial void OnPrice2Changing(System.Nullable<decimal> value);
    partial void OnPrice2Changed();
    partial void OnMoneyChanging(System.Nullable<decimal> value);
    partial void OnMoneyChanged();
    #endregion
		
		public Detail()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccIn", DbType="BigInt")]
		public System.Nullable<long> AccIn
		{
			get
			{
				return this._AccIn;
			}
			set
			{
				if ((this._AccIn != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccInChanging(value);
					this.SendPropertyChanging();
					this._AccIn = value;
					this.SendPropertyChanged("AccIn");
					this.OnAccInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccOut", DbType="BigInt")]
		public System.Nullable<long> AccOut
		{
			get
			{
				return this._AccOut;
			}
			set
			{
				if ((this._AccOut != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccOutChanging(value);
					this.SendPropertyChanging();
					this._AccOut = value;
					this.SendPropertyChanged("AccOut");
					this.OnAccOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateIn
		{
			get
			{
				return this._DateIn;
			}
			set
			{
				if ((this._DateIn != value))
				{
					this.OnDateInChanging(value);
					this.SendPropertyChanging();
					this._DateIn = value;
					this.SendPropertyChanged("DateIn");
					this.OnDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOut", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOut
		{
			get
			{
				return this._DateOut;
			}
			set
			{
				if ((this._DateOut != value))
				{
					this.OnDateOutChanging(value);
					this.SendPropertyChanging();
					this._DateOut = value;
					this.SendPropertyChanged("DateOut");
					this.OnDateOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="Int")]
		public System.Nullable<int> Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hour", DbType="Int")]
		public System.Nullable<int> Hour
		{
			get
			{
				return this._Hour;
			}
			set
			{
				if ((this._Hour != value))
				{
					this.OnHourChanging(value);
					this.SendPropertyChanging();
					this._Hour = value;
					this.SendPropertyChanged("Hour");
					this.OnHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price1", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Price1
		{
			get
			{
				return this._Price1;
			}
			set
			{
				if ((this._Price1 != value))
				{
					this.OnPrice1Changing(value);
					this.SendPropertyChanging();
					this._Price1 = value;
					this.SendPropertyChanged("Price1");
					this.OnPrice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price2", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Price2
		{
			get
			{
				return this._Price2;
			}
			set
			{
				if ((this._Price2 != value))
				{
					this.OnPrice2Changing(value);
					this.SendPropertyChanging();
					this._Price2 = value;
					this.SendPropertyChanged("Price2");
					this.OnPrice2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Money", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Money
		{
			get
			{
				return this._Money;
			}
			set
			{
				if ((this._Money != value))
				{
					this.OnMoneyChanging(value);
					this.SendPropertyChanging();
					this._Money = value;
					this.SendPropertyChanged("Money");
					this.OnMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Detail", Storage="_User", ThisKey="AccIn", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Details.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Details.Add(this);
						this._AccIn = value.Id;
					}
					else
					{
						this._AccIn = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Detail1", Storage="_User1", ThisKey="AccOut", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Details1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Details1.Add(this);
						this._AccOut = value.Id;
					}
					else
					{
						this._AccOut = default(Nullable<long>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Groups")]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private EntitySet<Kind> _Kinds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Group()
		{
			this._Kinds = new EntitySet<Kind>(new Action<Kind>(this.attach_Kinds), new Action<Kind>(this.detach_Kinds));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Kind", Storage="_Kinds", ThisKey="Id", OtherKey="GroupId")]
		public EntitySet<Kind> Kinds
		{
			get
			{
				return this._Kinds;
			}
			set
			{
				this._Kinds.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kinds(Kind entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_Kinds(Kind entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kinds")]
	public partial class Kind : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private System.Nullable<long> _GroupId;
		
		private string _Descript;
		
		private System.Nullable<decimal> _LengthMin;
		
		private System.Nullable<decimal> _LengthMax;
		
		private System.Nullable<int> _ChairMin;
		
		private System.Nullable<int> _ChairMax;
		
		private System.Nullable<decimal> _WeightMin;
		
		private System.Nullable<decimal> _WeightMax;
		
		private System.Nullable<decimal> _Money1;
		
		private System.Nullable<decimal> _Money2;
		
		private string _Type;
		
		private EntitySet<Vehicle> _Vehicles;
		
		private EntityRef<Group> _Group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGroupIdChanging(System.Nullable<long> value);
    partial void OnGroupIdChanged();
    partial void OnDescriptChanging(string value);
    partial void OnDescriptChanged();
    partial void OnLengthMinChanging(System.Nullable<decimal> value);
    partial void OnLengthMinChanged();
    partial void OnLengthMaxChanging(System.Nullable<decimal> value);
    partial void OnLengthMaxChanged();
    partial void OnChairMinChanging(System.Nullable<int> value);
    partial void OnChairMinChanged();
    partial void OnChairMaxChanging(System.Nullable<int> value);
    partial void OnChairMaxChanged();
    partial void OnWeightMinChanging(System.Nullable<decimal> value);
    partial void OnWeightMinChanged();
    partial void OnWeightMaxChanging(System.Nullable<decimal> value);
    partial void OnWeightMaxChanged();
    partial void OnMoney1Changing(System.Nullable<decimal> value);
    partial void OnMoney1Changed();
    partial void OnMoney2Changing(System.Nullable<decimal> value);
    partial void OnMoney2Changed();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public Kind()
		{
			this._Vehicles = new EntitySet<Vehicle>(new Action<Vehicle>(this.attach_Vehicles), new Action<Vehicle>(this.detach_Vehicles));
			this._Group = default(EntityRef<Group>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="BigInt")]
		public System.Nullable<long> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descript", DbType="NVarChar(200)")]
		public string Descript
		{
			get
			{
				return this._Descript;
			}
			set
			{
				if ((this._Descript != value))
				{
					this.OnDescriptChanging(value);
					this.SendPropertyChanging();
					this._Descript = value;
					this.SendPropertyChanged("Descript");
					this.OnDescriptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LengthMin", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LengthMin
		{
			get
			{
				return this._LengthMin;
			}
			set
			{
				if ((this._LengthMin != value))
				{
					this.OnLengthMinChanging(value);
					this.SendPropertyChanging();
					this._LengthMin = value;
					this.SendPropertyChanged("LengthMin");
					this.OnLengthMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LengthMax", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LengthMax
		{
			get
			{
				return this._LengthMax;
			}
			set
			{
				if ((this._LengthMax != value))
				{
					this.OnLengthMaxChanging(value);
					this.SendPropertyChanging();
					this._LengthMax = value;
					this.SendPropertyChanged("LengthMax");
					this.OnLengthMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChairMin", DbType="Int")]
		public System.Nullable<int> ChairMin
		{
			get
			{
				return this._ChairMin;
			}
			set
			{
				if ((this._ChairMin != value))
				{
					this.OnChairMinChanging(value);
					this.SendPropertyChanging();
					this._ChairMin = value;
					this.SendPropertyChanged("ChairMin");
					this.OnChairMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChairMax", DbType="Int")]
		public System.Nullable<int> ChairMax
		{
			get
			{
				return this._ChairMax;
			}
			set
			{
				if ((this._ChairMax != value))
				{
					this.OnChairMaxChanging(value);
					this.SendPropertyChanging();
					this._ChairMax = value;
					this.SendPropertyChanged("ChairMax");
					this.OnChairMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightMin", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> WeightMin
		{
			get
			{
				return this._WeightMin;
			}
			set
			{
				if ((this._WeightMin != value))
				{
					this.OnWeightMinChanging(value);
					this.SendPropertyChanging();
					this._WeightMin = value;
					this.SendPropertyChanged("WeightMin");
					this.OnWeightMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightMax", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> WeightMax
		{
			get
			{
				return this._WeightMax;
			}
			set
			{
				if ((this._WeightMax != value))
				{
					this.OnWeightMaxChanging(value);
					this.SendPropertyChanging();
					this._WeightMax = value;
					this.SendPropertyChanged("WeightMax");
					this.OnWeightMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Money1", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Money1
		{
			get
			{
				return this._Money1;
			}
			set
			{
				if ((this._Money1 != value))
				{
					this.OnMoney1Changing(value);
					this.SendPropertyChanging();
					this._Money1 = value;
					this.SendPropertyChanged("Money1");
					this.OnMoney1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Money2", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Money2
		{
			get
			{
				return this._Money2;
			}
			set
			{
				if ((this._Money2 != value))
				{
					this.OnMoney2Changing(value);
					this.SendPropertyChanging();
					this._Money2 = value;
					this.SendPropertyChanged("Money2");
					this.OnMoney2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kind_Vehicle", Storage="_Vehicles", ThisKey="Id", OtherKey="KindId")]
		public EntitySet<Vehicle> Vehicles
		{
			get
			{
				return this._Vehicles;
			}
			set
			{
				this._Vehicles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Kind", Storage="_Group", ThisKey="GroupId", OtherKey="Id", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.Kinds.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.Kinds.Add(this);
						this._GroupId = value.Id;
					}
					else
					{
						this._GroupId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Kind = this;
		}
		
		private void detach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Kind = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Acc;
		
		private string _Pass;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _Birth;
		
		private string _Address;
		
		private string _Phone;
		
		private int _Role;
		
		private EntitySet<Detail> _Details;
		
		private EntitySet<Detail> _Details1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAccChanging(string value);
    partial void OnAccChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnRoleChanging(int value);
    partial void OnRoleChanged();
    #endregion
		
		public User()
		{
			this._Details = new EntitySet<Detail>(new Action<Detail>(this.attach_Details), new Action<Detail>(this.detach_Details));
			this._Details1 = new EntitySet<Detail>(new Action<Detail>(this.attach_Details1), new Action<Detail>(this.detach_Details1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Acc
		{
			get
			{
				return this._Acc;
			}
			set
			{
				if ((this._Acc != value))
				{
					this.OnAccChanging(value);
					this.SendPropertyChanging();
					this._Acc = value;
					this.SendPropertyChanged("Acc");
					this.OnAccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birth
		{
			get
			{
				return this._Birth;
			}
			set
			{
				if ((this._Birth != value))
				{
					this.OnBirthChanging(value);
					this.SendPropertyChanging();
					this._Birth = value;
					this.SendPropertyChanged("Birth");
					this.OnBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(200)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="Int NOT NULL")]
		public int Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Detail", Storage="_Details", ThisKey="Id", OtherKey="AccIn")]
		public EntitySet<Detail> Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				this._Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Detail1", Storage="_Details1", ThisKey="Id", OtherKey="AccOut")]
		public EntitySet<Detail> Details1
		{
			get
			{
				return this._Details1;
			}
			set
			{
				this._Details1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Details(Detail entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Details(Detail entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Details1(Detail entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Details1(Detail entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
	}
}
#pragma warning restore 1591
